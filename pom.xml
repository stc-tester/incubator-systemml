<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<!-- adding line here -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.apache</groupId>
		<artifactId>apache</artifactId>
		<version>17</version>
	</parent>
	<groupId>org.apache.systemml</groupId>
	<version>0.10.0-SNAPSHOT</version>
	<artifactId>system-ml</artifactId>
	<packaging>jar</packaging>
	<name>SystemML</name>
	<description>Declarative machine learning</description>
	<url>http://systemml.apache.org/</url>
	<licenses>
		<license>
			<name>Apache 2.0 License</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:apache/incubator-systemml</connection>
		<developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/incubator-systemml</developerConnection>
		<url>https://git-wip-us.apache.org/repos/asf?p=incubator-systemml.git</url>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>JIRA</system>
		<url>https://issues.apache.org/jira/browse/SYSTEMML</url>
	</issueManagement>
	<mailingLists>
		<mailingList>
			<name>Dev Mailing List</name>
			<post>dev@systemml.incubator.apache.org</post>
			<subscribe>dev-subscribe@systemml.incubator.apache.org</subscribe>
			<unsubscribe>dev-unsubscribe@systemml.incubator.apache.org</unsubscribe>
		</mailingList>
		<mailingList>
			<name>Commits Mailing List</name>
			<post>commits@systemml.incubator.apache.org</post>
			<subscribe>commits-subscribe@systemml.incubator.apache.org</subscribe>
			<unsubscribe>commits-unsubscribe@systemml.incubator.apache.org</unsubscribe>
		</mailingList>
	</mailingLists>

	<properties>
		<hadoop.version>2.4.1</hadoop.version>
		<antlr.version>4.3</antlr.version>
		<spark.version>1.4.1</spark.version>

		<!-- OS-specific JVM arguments for running integration tests -->
		<integrationTestExtraJVMArgs />
	</properties>

	<build>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>org.apache.sysml.utils.InstallDependencyForIntegrationTests</mainClass>
							<arguments>
								<argument>${skipTests}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.hadoop</groupId>
									<artifactId>hadoop-test</artifactId>
									<version>1.2.1</version>
									<!-- <classifier>jar</classifier> -->
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/hadoop-test</outputDirectory>
									<includes>**/*</includes>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- PLEASE DO NOT REMOVE! NEEDED to "PACKAGE" ANTLR RUNTIME INTO SYSTEMML.JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- Include signature files so that recent versions of Java will run
						the resulting jar without complaining about "Invalid signature file digest
						for Manifest main attributes". -->
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<!--  Test suite classes kept in a separate folder for compatibility
								 	  with the Eclipse JUnit test runner. -->
								<source>${basedir}/src/test_suites/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<archive>
						<index>true</index>
						<!-- <manifest> -->
						<!-- <addClasspath>true</addClasspath> -->
						<!-- </manifest> -->
						<manifestEntries>
							<Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
							<Main-Class>org.apache.sysml.api.DMLScript</Main-Class>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${basedir}/src/test/config/hadoop_bin_windows/bin</directory>
									<filtering>false</filtering>
									<includes>
										<include>*.*</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${basedir}/target/lib/hadoop/bin</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<configuration>
					<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
					<outputDirectory>${basedir}/src/main/java</outputDirectory>
				</configuration>
				<version>${antlr.version}</version>
				<executions>
					<execution>
						<id>antlr</id>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Currently, all tests are integration tests. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18</version><!--$NO-MVN-MAN-VER$-->
				<configuration>

					<!-- STDERR/STDOUT to individual .txt files instead of console -->
					<redirectTestOutputToFile>true</redirectTestOutputToFile>

					<!-- Run (num cores) test harness classes in parallel, each in a separate
						process -->
					<forkCount>1C</forkCount>
					<reuseForks>true</reuseForks>

					<!-- Third argument prevents Java from popping up lots of windows on
						MacOS -->
					<argLine>-Dfile.encoding=UTF-8 -Xmx2g -Xms2g -Xmn200m -Djava.awt.headless=true</argLine>

					<includes>
						<!--  All tests are integration tests as far as Maven is concerned. -->
					</includes>

					<excludes>
						<exclude>**/slowtest/**</exclude>
						<exclude>**/integration/**</exclude>
					</excludes>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>

				<!-- *** HACK ALERT *** HACK ALERT *** HACK ALERT *** -->
				<!-- Failsafe 2.18 has a bug in computing # cores, so use 2.17 -->
				<version>2.17</version><!--$NO-MVN-MAN-VER$-->
				<!-- *** END HACK *** -->

				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>

					<!-- STDERR/STDOUT to individual .txt files instead of console -->
					<redirectTestOutputToFile>true</redirectTestOutputToFile>

					<!-- Tests are grouped into suites, one suite per package. -->
					<parallel>suites</parallel>
					<threadCount>1</threadCount>

					<!-- 2 processes per test -->
					<forkCount>0.5C</forkCount>
					<reuseForks>false</reuseForks>

					<!-- Last argument prevents Java from popping up lots of windows on
						MacOS -->
					<argLine>-Dfile.encoding=UTF-8 -Xmx2g -Xms2g -Xmn200m
						${integrationTestExtraJVMArgs}
						-Djava.awt.headless=true</argLine>

					<includes>
						<include>**/integration/applications/**/*Suite.java</include>
						<include>**/integration/functions/gdfo/*Suite.java</include>
						<include>**/integration/functions/sparse/*Suite.java</include>
						<include>**/integration/functions/**/*Test*.java</include>
						<include>**/integration/scalability/**/*Test.java</include>
					</includes>

					<excludes>
						<exclude>**/slowtest/**</exclude>
					</excludes>

				</configuration>
			</plugin>

		<!-- Prevent m2e warnings about the use of maven-remote-resources-plugin
		in the Maven archetype that we currently use for this project. -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-remote-resources-plugin</artifactId>
									<versionRange>[1.0,)</versionRange>
									<goals>
										<goal>process</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore>
									</ignore>
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>clean-original-jar</id>
						<phase>package</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>original-*.jar</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<configuration>
							<target name="copy and rename JAR">
								<copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" tofile="${project.build.directory}/SystemML.jar" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>


	<profiles>
		<profile>
			<!-- Profile for Windows builds. Not currently needed, but might be needed
				in the future. -->
			<id>platform-windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<!-- Extra JVM args for Windows go here.-->
				<integrationTestExtraJVMArgs />
			</properties>
		</profile>

		<profile>
			<id>rat</id>
			<build>
				<defaultGoal>clean org.apache.rat:apache-rat-plugin:check</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.rat</groupId>
						<artifactId>apache-rat-plugin</artifactId>
						<version>0.11</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludes>
								<exclude>.gitignore</exclude>
								<exclude>.repository/</exclude>
								<exclude>.idea/</exclude>
								<exclude>.git</exclude>
								<exclude>.settings</exclude>
								<exclude>.classpath</exclude>
								<exclude>.project</exclude>
								<exclude>docs</exclude>
								<exclude>**/docs/**</exclude>
								<exclude>**/*.csv</exclude>
								<exclude>**/*.json</exclude>
								<exclude>**/*.mtx</exclude>
								<exclude>**/*.mtd</exclude>
								<exclude>**/target/**</exclude>
								<exclude>**/README.md</exclude>
								<!-- Generated antlr files -->
								<exclude>src/main/java/Dml.tokens</exclude>
								<exclude>src/main/java/DmlLexer.tokens</exclude>
								<exclude>src/main/java/Pydml.tokens</exclude>
								<exclude>src/main/java/PydmlLexer.tokens</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/antlr4/DmlBaseListener.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/antlr4/DmlLexer.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/antlr4/DmlListener.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/antlr4/DmlParser.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/python/PydmlBaseListener.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/python/PydmlLexer.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/python/PydmlListener.java</exclude>
								<exclude>src/main/java/org/apache/sysml/parser/python/PydmlParser.java</exclude>
								<!-- Test Validation files -->
								<exclude>src/test/scripts/functions/external/kMeans/kMeansWrapperOutput</exclude>
								<exclude>src/test/scripts/functions/external/kMeans2/kMeansWrapperOutput1</exclude>
								<exclude>src/test/scripts/functions/external/kMeans2/kMeansWrapperOutput2</exclude>
								<exclude>src/test/scripts/functions/external/seqMiner/FreqSeqFile</exclude>
								<exclude>src/test/scripts/functions/external/seqMiner/FreqSeqSupportFile</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_1.data</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_1.data.single</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_2.data/part-0</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_2.data/part-1</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_2.data.single</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_3.data/part-0</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_3.data/part-1</exclude>
								<exclude>src/test/scripts/functions/io/csv/in/transfusion_3.data.single</exclude>
								<exclude>src/test/scripts/functions/transform/input/homes/homesNAN.csv.colnames</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Profile to create binary distributions.
				Execute with `mvn clean package -P distribution` -->
			<id>distribution</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version><!--$NO-MVN-MAN-VER$-->
						<executions>
							<execution>
								<id>create-source-distribution-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/source.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>

							<execution>
								<id>create-binary-distribution-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/distrib.xml</descriptor>
									</descriptors>
									<appendAssemblyId>false</appendAssemblyId>
								</configuration>
							</execution>

							<execution>
								<id>create-binary-standalone-distribution-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/standalone.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>

							<!--execution>
								<id>create-inmemory-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/inmemory.xml</descriptor>
									</descriptors>
								</configuration>
							</execution-->
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.8.2</version>
						<configuration>
							<updateReleaseInfo>true</updateReleaseInfo>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.3</version>
						<configuration>
							<maxmemory>1024m</maxmemory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<dependencies>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.10</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.10</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- To support dataframe in mlcontext -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.10</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Adding Gauva version 14.0.1 to workaround conflict between spark and hadoop dependency -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-app</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-jobclient</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>1.8</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.wink</groupId>
			<artifactId>wink-json4j</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax-api</artifactId>
			<version>1.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
			<version>${antlr.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>antlr-runtime</artifactId>
					<groupId>org.antlr</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>${antlr.version}</version>
		</dependency>

		<!-- Libraries for yarn integration -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-api</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-common</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-client</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-common</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

</project>
